/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  RelayActor,
  RelayActorInterface,
} from "../../../../../contracts/test/invariants/CrossDomainMessenger.t.sol/RelayActor";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract OptimismPortal",
        name: "_op",
        type: "address",
      },
      {
        internalType: "contract L1CrossDomainMessenger",
        name: "_xdm",
        type: "address",
      },
      {
        internalType: "contract Vm",
        name: "_vm",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_doFail",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_version",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_value",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reverted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002805460ff1916905534801561001a57600080fd5b50604051611205380380611205833981016040819052610039916100b3565b60028054610100600160a81b0319166101006001600160a01b0396871602179055600380546001600160a01b0319169385169390931790925560048054919093166001600160a81b031990911617600160a01b91151591909102179055610117565b6001600160a01b03811681146100b057600080fd5b50565b600080600080608085870312156100c957600080fd5b84516100d48161009b565b60208601519094506100e58161009b565b60408601519093506100f68161009b565b6060860151909250801515811461010c57600080fd5b939692955090935050565b6110df806101266000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063348a71cb14610051578063501895ae1461006d578063bc0af82a14610080578063e828a0ce1461009d575b600080fd5b61005a60005481565b6040519081526020015b60405180910390f35b61005a61007b366004610c06565b6100b2565b60025461008d9060ff1681565b6040519015158152602001610064565b6100b06100ab366004610c64565b6100d3565b005b600181815481106100c257600080fd5b600091825260209091200154905081565b8051600490734200000000000000000000000000000000000007906000906020906100ff90601f610d83565b6101099190610dca565b610114906003610dde565b61011f90600f610d83565b6004546002546040805173ffffffffffffffffffffffffffffffffffffffff8781166020830152949550928416936370ca10bb9361010090930416916032910160405160208183030381529060405261017790610e1b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff909316600484015260248301919091526044820152606401600060405180830381600087803b1580156101ea57600080fd5b505af11580156101fe573d6000803e3d6000fd5b5050505060028661020f9190610e60565b955061021c600286610e60565b60045490955060009074010000000000000000000000000000000000000000900460ff166102ec576003546040517fb28ade2500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063b28ade259061029c9088908690600401610efc565b602060405180830381865afa1580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd9190610f24565b67ffffffffffffffff16610302565b6103028263ffffffff1661ea60620138806107b3565b905060006103427eff00000000000000000000000000000000000000000000000000000000000060f08a901b1685878a60ff168763ffffffff168b610808565b60018054808201825560008281527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910183905580549293509091819061038b908490610d83565b9091555050600480546003546040517fb1b1b20900000000000000000000000000000000000000000000000000000000815292830184905273ffffffffffffffffffffffffffffffffffffffff91821692634c63e562929091169063b1b1b20990602401602060405180830381865afa15801561040c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104309190610f4e565b1580156104cd57506003546040517fa4e7f8bd0000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169063a4e7f8bd90602401602060405180830381865afa1580156104a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cb9190610f4e565b155b6040518263ffffffff1660e01b81526004016104ed911515815260200190565b60006040518083038186803b15801561050557600080fd5b505afa158015610519573d6000803e3d6000fd5b5050600480546002546040517f06447d5600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff6101009092048216938101939093521692506306447d569150602401600060405180830381600087803b15801561059357600080fd5b505af11580156105a7573d6000803e3d6000fd5b505060045474010000000000000000000000000000000000000000900460ff16915061065d905057600480546040517f08e4e11600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116916308e4e1169161062a91908b9088908c908401610f70565b600060405180830381600087803b15801561064457600080fd5b505af1158015610658573d6000803e3d6000fd5b505050505b60035473ffffffffffffffffffffffffffffffffffffffff1663d764ad0b8360ff8a167eff00000000000000000000000000000000000000000000000000000000000060f08d901b16888a8d8a8e6040518963ffffffff1660e01b81526004016106cc96959493929190610fbe565b6000604051808303818589803b1580156106e557600080fd5b5088f194505050505080156106f8575060015b61072857600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b60048054604080517f90c5013b000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216926390c5013b92828201926000929082900301818387803b15801561079157600080fd5b505af11580156107a5573d6000803e3d6000fd5b505050505050505050505050565b60006107c084848461082b565b90506108016040518060400160405280600c81526020017f426f756e6420526573756c74000000000000000000000000000000000000000081525082610a67565b9392505050565b6000610818878787878787610b67565b8051906020012090509695505050505050565b6000818311156108c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156108d15750818411155b156108dd575082610801565b60006108e9848461101e565b6108f4906001610d83565b90506003851115801561090657508481115b1561091d576109158585610d83565b915050610801565b61094860037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61101e565b851015801561097f575061097c857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61101e565b81115b156109b8576109ae857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61101e565b610915908461101e565b82851115610a0e5760006109cc848761101e565b905060006109da8383611035565b9050806000036109ef57849350505050610801565b60016109fb8288610d83565b610a05919061101e565b93505050610a5f565b83851015610a5f576000610a22868661101e565b90506000610a308383611035565b905080600003610a4557859350505050610801565b610a4f818661101e565b610a5a906001610d83565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff168383604051602401610a9e929190611049565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc0000000000000000000000000000000000000000000000000000000017905251610b1f919061106b565b600060405180830381855afa9150503d8060008114610b5a576040519150601f19603f3d011682016040523d82523d6000602084013e610b5f565b606091505b505050505050565b6060868686868686604051602401610b8496959493929190611087565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fd764ad0b0000000000000000000000000000000000000000000000000000000017905290509695505050505050565b600060208284031215610c1857600080fd5b5035919050565b803560ff81168114610c3057600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600060608486031215610c7957600080fd5b610c8284610c1f565b9250610c9060208501610c1f565b9150604084013567ffffffffffffffff80821115610cad57600080fd5b818601915086601f830112610cc157600080fd5b813581811115610cd357610cd3610c35565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610d1957610d19610c35565b81604052828152896020848701011115610d3257600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610d9657610d96610d54565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082610dd957610dd9610d9b565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1657610e16610d54565b500290565b80516020808301519190811015610e5a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160200360031b1b821691505b50919050565b600060ff831680610e7357610e73610d9b565b8060ff84160691505092915050565b60005b83811015610e9d578181015183820152602001610e85565b83811115610eac576000848401525b50505050565b60008151808452610eca816020860160208601610e82565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b604081526000610f0f6040830185610eb2565b905063ffffffff831660208301529392505050565b600060208284031215610f3657600080fd5b815167ffffffffffffffff8116811461080157600080fd5b600060208284031215610f6057600080fd5b8151801515811461080157600080fd5b73ffffffffffffffffffffffffffffffffffffffff8516815260ff8416602082015263ffffffff83166040820152608060608201526000610fb46080830184610eb2565b9695505050505050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525060ff8516606083015263ffffffff8416608083015260c060a083015261101260c0830184610eb2565b98975050505050505050565b60008282101561103057611030610d54565b500390565b60008261104457611044610d9b565b500690565b60408152600061105c6040830185610eb2565b90508260208301529392505050565b6000825161107d818460208701610e82565b9190910192915050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a083015261101260c0830184610eb256fea164736f6c634300080f000a";

type RelayActorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayActorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayActor__factory extends ContractFactory {
  constructor(...args: RelayActorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _op: PromiseOrValue<string>,
    _xdm: PromiseOrValue<string>,
    _vm: PromiseOrValue<string>,
    _doFail: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayActor> {
    return super.deploy(
      _op,
      _xdm,
      _vm,
      _doFail,
      overrides || {}
    ) as Promise<RelayActor>;
  }
  override getDeployTransaction(
    _op: PromiseOrValue<string>,
    _xdm: PromiseOrValue<string>,
    _vm: PromiseOrValue<string>,
    _doFail: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_op, _xdm, _vm, _doFail, overrides || {});
  }
  override attach(address: string): RelayActor {
    return super.attach(address) as RelayActor;
  }
  override connect(signer: Signer): RelayActor__factory {
    return super.connect(signer) as RelayActor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayActorInterface {
    return new utils.Interface(_abi) as RelayActorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayActor {
    return new Contract(address, _abi, signerOrProvider) as RelayActor;
  }
}
