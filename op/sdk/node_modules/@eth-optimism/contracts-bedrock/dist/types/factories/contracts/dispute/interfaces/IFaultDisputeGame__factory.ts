/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFaultDisputeGame,
  IFaultDisputeGameInterface,
} from "../../../../contracts/dispute/interfaces/IFaultDisputeGame";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "parentIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "Claim",
        name: "pivot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimant",
        type: "address",
      },
    ],
    name: "Move",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum GameStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "Resolved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_parentIndex",
        type: "uint256",
      },
      {
        internalType: "Claim",
        name: "_pivot",
        type: "bytes32",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "bondManager",
    outputs: [
      {
        internalType: "contract IBondManager",
        name: "bondManager_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "createdAt",
    outputs: [
      {
        internalType: "Timestamp",
        name: "createdAt_",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_parentIndex",
        type: "uint256",
      },
      {
        internalType: "Claim",
        name: "_pivot",
        type: "bytes32",
      },
    ],
    name: "defend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "extraData",
    outputs: [
      {
        internalType: "bytes",
        name: "extraData_",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "gameData",
    outputs: [
      {
        internalType: "GameType",
        name: "gameType_",
        type: "uint8",
      },
      {
        internalType: "Claim",
        name: "rootClaim_",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "extraData_",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "gameType",
    outputs: [
      {
        internalType: "GameType",
        name: "gameType_",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resolve",
    outputs: [
      {
        internalType: "enum GameStatus",
        name: "status_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rootClaim",
    outputs: [
      {
        internalType: "Claim",
        name: "rootClaim_",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum GameStatus",
        name: "status_",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_prestateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_parentIndex",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_stateData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "step",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "_version",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

export class IFaultDisputeGame__factory {
  static readonly abi = _abi;
  static createInterface(): IFaultDisputeGameInterface {
    return new utils.Interface(_abi) as IFaultDisputeGameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFaultDisputeGame {
    return new Contract(address, _abi, signerOrProvider) as IFaultDisputeGame;
  }
}
