/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ExampleClone,
  ExampleCloneInterface,
} from "../../../../contracts/test/Clones.t.sol/ExampleClone";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_argOffset",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "addressArg",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "arrLen",
        type: "uint64",
      },
    ],
    name: "dynBytesArg",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fixedBytesArg",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uint64Arg",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uint8Arg",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uintArg",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "arrLen",
        type: "uint64",
      },
    ],
    name: "uintArrayArg",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104db3803806104db83398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b61047c8061005f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a6c9dc061161005b578063a6c9dc0614610146578063afae0c7614610166578063bd1275dd14610186578063bea94f3e146100c857600080fd5b8063011cd743146100825780637fb31a14146100c8578063a5caaf5a14610105575b600080fd5b600054604051367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90039091013560f81c81526020015b60405180910390f35b600054367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c900301356040519081526020016100bf565b600054604051367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90039091013560c01c81526020016100bf565b610159610154366004610319565b6101c7565b6040516100bf919061034a565b610179610174366004610319565b6101db565b6040516100bf919061038e565b600054604051367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c90039091013560601c81526020016100bf565b60606101d5600054836101e9565b92915050565b60606101d560005483610282565b6060600061022084367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003610401565b90508267ffffffffffffffff1667ffffffffffffffff81111561024557610245610440565b60405190808252806020026020018201604052801561026e578160200160208202803683370190505b5091508260051b8160208401375092915050565b606060006102b984367ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81013560f01c9003610401565b90508267ffffffffffffffff1667ffffffffffffffff8111156102de576102de610440565b6040519080825280601f01601f191660200182016040528015610308576020820181803683370190505b509150828160208401375092915050565b60006020828403121561032b57600080fd5b813567ffffffffffffffff8116811461034357600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561038257835183529284019291840191600101610366565b50909695505050505050565b600060208083528351808285015260005b818110156103bb5785810183015185820160400152820161039f565b818111156103cd576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000821982111561043b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c634300080f000a";

type ExampleCloneConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleCloneConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleClone__factory extends ContractFactory {
  constructor(...args: ExampleCloneConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _argOffset: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExampleClone> {
    return super.deploy(_argOffset, overrides || {}) as Promise<ExampleClone>;
  }
  override getDeployTransaction(
    _argOffset: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_argOffset, overrides || {});
  }
  override attach(address: string): ExampleClone {
    return super.attach(address) as ExampleClone;
  }
  override connect(signer: Signer): ExampleClone__factory {
    return super.connect(signer) as ExampleClone__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleCloneInterface {
    return new utils.Interface(_abi) as ExampleCloneInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleClone {
    return new Contract(address, _abi, signerOrProvider) as ExampleClone;
  }
}
