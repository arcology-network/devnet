/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LibPosition_Test,
  LibPosition_TestInterface,
} from "../../../../contracts/test/LibPosition.t.sol/LibPosition_Test";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeArtifacts",
    outputs: [
      {
        internalType: "string[]",
        name: "excludedArtifacts_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "excludedContracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeSenders",
    outputs: [
      {
        internalType: "address[]",
        name: "excludedSenders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetArtifactSelectors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct StdInvariant.FuzzSelector[]",
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetArtifacts",
    outputs: [
      {
        internalType: "string[]",
        name: "targetedArtifacts_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "targetedContracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetSelectors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct StdInvariant.FuzzSelector[]",
        name: "targetedSelectors_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetSenders",
    outputs: [
      {
        internalType: "address[]",
        name: "targetedSenders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_depth",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "_indexAtDepth",
        type: "uint64",
      },
    ],
    name: "testFuzz_attack_correctness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_depth",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "_indexAtDepth",
        type: "uint64",
      },
    ],
    name: "testFuzz_defend_correctness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_depth",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "_indexAtDepth",
        type: "uint64",
      },
    ],
    name: "testFuzz_depth_correctness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_depth",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "_indexAtDepth",
        type: "uint64",
      },
    ],
    name: "testFuzz_indexAtDepth_correctness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_depth",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "_indexAtDepth",
        type: "uint64",
      },
    ],
    name: "testFuzz_left_correctness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_depth",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "_indexAtDepth",
        type: "uint64",
      },
    ],
    name: "testFuzz_parent_correctness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_maxDepth",
        type: "uint64",
      },
      {
        internalType: "uint8",
        name: "_depth",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "_indexAtDepth",
        type: "uint64",
      },
    ],
    name: "testFuzz_rightIndex_correctness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_depth",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "_indexAtDepth",
        type: "uint64",
      },
    ],
    name: "testFuzz_right_correctness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b506120458061003d6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806385226c81116100b2578063b5508aa911610081578063dbffa48811610066578063dbffa48814610242578063e20c9f7114610255578063fa7626d41461025d57600080fd5b8063b5508aa914610222578063ba414fa61461022a57600080fd5b806385226c81146101df5780638a58f5cd146101f4578063916a17c614610207578063949057b21461020f57600080fd5b80633f7286f41161010957806353da0669116100ee57806353da0669146101a457806366d9a9a0146101b75780636f4760f9146101cc57600080fd5b80633f7286f4146101895780634230bd681461019157600080fd5b80630a4e3d641461013b5780631ed7831c146101505780632a200a071461016e5780633e5e3c2314610181575b600080fd5b61014e6101493660046119ae565b61026a565b005b6101586103b4565b60405161016591906119e1565b60405180910390f35b61014e61017c3660046119ae565b610423565b610158610505565b610158610572565b61014e61019f3660046119ae565b6105df565b61014e6101b23660046119ae565b61071f565b6101bf610851565b6040516101659190611a3b565b61014e6101da3660046119ae565b610962565b6101e7610a47565b6040516101659190611ba7565b61014e6102023660046119ae565b610b17565b6101bf610b76565b61014e61021d366004611c27565b610c7e565b6101e7610d82565b610232610e52565b6040519015158152602001610165565b61014e6102503660046119ae565b610fb2565b6101586110e8565b6000546102329060ff1681565b61027a60ff83166000603f611155565b915061028682826111aa565b90506000600160ff84161b8201905060006102b3826fffffffffffffffffffffffffffffffff1660011b90565b905061037b610354826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff1661036c60ff87166001611c99565b67ffffffffffffffff166111f1565b6103ae610399826fffffffffffffffffffffffffffffffff1661135d565b67ffffffffffffffff1661036c856002611cc5565b50505050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561041957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116103ee575b5050505050905090565b61043360ff83166000603f611155565b915061043f82826111aa565b90506000600160ff84161b820190506105006104ed826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff168460ff166111f1565b505050565b6060600f8054806020026020016040519081016040528092919081815260200182805480156104195760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116103ee575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156104195760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116103ee575050505050905090565b6105ef60ff83166000603f611155565b91506105fb82826111aa565b9050600160ff831681901b8201906000907001fffffffffffffffffffffffffffffffe83821b160190506106e16106c4826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff166106d9866001611cf5565b60ff166111f1565b6103ae6106ff826fffffffffffffffffffffffffffffffff1661135d565b67ffffffffffffffff16610714856002611cc5565b61036c906001611c99565b61072f60ff83166001603f611155565b915061073b82826111aa565b90506000600160ff84161b820190506000610768826fffffffffffffffffffffffffffffffff1660011c90565b905061081e610809826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff166106d9600187611d1a565b6103ae61083c826fffffffffffffffffffffffffffffffff1661135d565b67ffffffffffffffff1661036c600286611d6c565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561095957600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561094157602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116108ee5790505b50505050508152505081526020019060010190610875565b50505050905090565b61097260ff83166000603f611155565b915061097e82826111aa565b9050600160ff83161b810160006109a66fffffffffffffffffffffffffffffffff8316611403565b905061037b6106c4826fffffffffffffffffffffffffffffffff167e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610959578382906000526020600020018054610a8a90611d93565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab690611d93565b8015610b035780601f10610ad857610100808354040283529160200191610b03565b820191906000526020600020905b815481529060010190602001808311610ae657829003601f168201915b505050505081526020019060010190610a6b565b610b2760ff83166000603f611155565b9150610b3382826111aa565b9050600160ff83161b8101610500610b5c6fffffffffffffffffffffffffffffffff831661135d565b67ffffffffffffffff168367ffffffffffffffff166111f1565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561095957600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015610c6657602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610c135790505b50505050508152505081526020019060010190610b9a565b610c9567ffffffffffffffff84166001603f611155565b60ff169250610cb38260ff1660008567ffffffffffffffff16611155565b9150610cbf82826111aa565b9050600160ff83161b81016000610cf26fffffffffffffffffffffffffffffffff831667ffffffffffffffff871661140f565b905060ff84165b8567ffffffffffffffff16811015610d3c57610d2a836fffffffffffffffffffffffffffffffff16600190811b0190565b9250610d3581611de6565b9050610cf9565b506000610d5a836fffffffffffffffffffffffffffffffff1661135d565b9050610d7a8267ffffffffffffffff168267ffffffffffffffff166111f1565b505050505050565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610959578382906000526020600020018054610dc590611d93565b80601f0160208091040260200160405190810160405280929190818152602001828054610df190611d93565b8015610e3e5780601f10610e1357610100808354040283529160200191610e3e565b820191906000526020600020905b815481529060010190602001808311610e2157829003601f168201915b505050505081526020019060010190610da6565b60008054610100900460ff1615610e725750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610fad5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091610f17917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611e1e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610f4f91611e66565b6000604051808303816000865af19150503d8060008114610f8c576040519150601f19603f3d011682016040523d82523d6000602084013e610f91565b606091505b5091505080806020019051810190610fa99190611e82565b9150505b919050565b610fc260ff83166001603f611155565b9150610fce82826111aa565b9050600160ff831681901b8201906ffffffffffffffffffffffffffffffffe82168101811b90611094907e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f6fffffffffffffffffffffffffffffffff841667ffffffffffffffff811160061b81811c63ffffffff1060051b1790811c9283901c909217600281901c17600481901c17600881901c17601081901c177f07c4acdd000000000000000000000000000000000000000000000000000000000260fb1c1a176106c4565b6103ae6110b2826fffffffffffffffffffffffffffffffff1661135d565b67ffffffffffffffff166110c7600286611d6c565b6110d2906002611cc5565b6110dd906001611c99565b61036c906002611cc5565b6060600c8054806020026020016040519081016040528092919081815260200182805480156104195760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116103ee575050505050905090565b60006111628484846114da565b90506111a36040518060400160405280600c81526020017f426f756e6420526573756c74000000000000000000000000000000000000000081525082611716565b9392505050565b600060ff8316156111e7576111e067ffffffffffffffff831660006111d0600187611d1a565b6111db906002611fc4565b611155565b90506111eb565b5060005b92915050565b808214611359577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161127d9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a160408051818152600a818301527f202045787065637465640000000000000000000000000000000000000000000060608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a818301527f2020202041637475616c0000000000000000000000000000000000000000000060608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1611359611809565b5050565b6000806113ea837e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b600167ffffffffffffffff919091161b90920392915050565b60006111eb8260011b90565b60008061149c847e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f7f07c4acdd0000000000000000000000000000000000000000000000000000000067ffffffffffffffff831160061b83811c63ffffffff1060051b1792831c600181901c17600281901c17600481901c17600881901c17601081901c170260fb1c1a1790565b67ffffffffffffffff169050828114600181146114c857818403600180821b0386821b179350506114cc565b8492505b5050600190911b9003919050565b600081831115611570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156115805750818411155b1561158c5750826111a3565b60006115988484611fd3565b6115a3906001611fea565b9050600385111580156115b557508481115b156115cc576115c48585611fea565b9150506111a3565b6115f760037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611fd3565b851015801561162e575061162b857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611fd3565b81115b156116675761165d857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611fd3565b6115c49084611fd3565b828511156116bd57600061167b8487611fd3565b905060006116898383612002565b90508060000361169e578493505050506111a3565b60016116aa8288611fea565b6116b49190611fd3565b9350505061170e565b8385101561170e5760006116d18686611fd3565b905060006116df8383612002565b9050806000036116f4578593505050506111a3565b6116fe8186611fd3565b611709906001611fea565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff16838360405160240161174d929190612016565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052516117ce9190611e66565b600060405180830381855afa9150503d8060008114610d7a576040519150601f19603f3d011682016040523d82523d6000602084013e610d7a565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156119575760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526118d89291602001611e1e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261191091611e66565b6000604051808303816000865af19150503d806000811461194d576040519150601f19603f3d011682016040523d82523d6000602084013e611952565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b803560ff81168114610fad57600080fd5b803567ffffffffffffffff81168114610fad57600080fd5b600080604083850312156119c157600080fd5b6119ca83611985565b91506119d860208401611996565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611a2f57835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016119fd565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015611b22578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b80831015611b0d5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190611acb565b50978a01979550505091870191600101611a63565b50919998505050505050505050565b60005b83811015611b4c578181015183820152602001611b34565b838111156103ae5750506000910152565b60008151808452611b75816020860160208601611b31565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611c1a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611c08858351611b5d565b94509285019290850190600101611bce565b5092979650505050505050565b600080600060608486031215611c3c57600080fd5b611c4584611996565b9250611c5360208501611985565b9150611c6160408501611996565b90509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff808316818516808303821115611cbc57611cbc611c6a565b01949350505050565b600067ffffffffffffffff80831681851681830481118215151615611cec57611cec611c6a565b02949350505050565b600060ff821660ff84168060ff03821115611d1257611d12611c6a565b019392505050565b600060ff821660ff841680821015611d3457611d34611c6a565b90039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600067ffffffffffffffff80841680611d8757611d87611d3d565b92169190910492915050565b600181811c90821680611da757607f821691505b602082108103611de0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e1757611e17611c6a565b5060010190565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251611e58816004850160208701611b31565b919091016004019392505050565b60008251611e78818460208701611b31565b9190910192915050565b600060208284031215611e9457600080fd5b815180151581146111a357600080fd5b600181815b80851115611efd57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611ee357611ee3611c6a565b80851615611ef057918102915b93841c9390800290611ea9565b509250929050565b600082611f14575060016111eb565b81611f21575060006111eb565b8160018114611f375760028114611f4157611f5d565b60019150506111eb565b60ff841115611f5257611f52611c6a565b50506001821b6111eb565b5060208310610133831016604e8410600b8410161715611f80575081810a6111eb565b611f8a8383611ea4565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611fbc57611fbc611c6a565b029392505050565b60006111a360ff841683611f05565b600082821015611fe557611fe5611c6a565b500390565b60008219821115611ffd57611ffd611c6a565b500190565b60008261201157612011611d3d565b500690565b6040815260006120296040830185611b5d565b9050826020830152939250505056fea164736f6c634300080f000a";

type LibPosition_TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibPosition_TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibPosition_Test__factory extends ContractFactory {
  constructor(...args: LibPosition_TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LibPosition_Test> {
    return super.deploy(overrides || {}) as Promise<LibPosition_Test>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LibPosition_Test {
    return super.attach(address) as LibPosition_Test;
  }
  override connect(signer: Signer): LibPosition_Test__factory {
    return super.connect(signer) as LibPosition_Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibPosition_TestInterface {
    return new utils.Interface(_abi) as LibPosition_TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibPosition_Test {
    return new Contract(address, _abi, signerOrProvider) as LibPosition_Test;
  }
}
